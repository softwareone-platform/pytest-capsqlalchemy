name: Main

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]


jobs:
  quality:
    runs-on: ubuntu-latest
    steps:
      - name: Check out
        uses: actions/checkout@v4

      - uses: actions/cache@v4
        with:
          path: ~/.cache/pre-commit
          key: pre-commit-${{ hashFiles('.pre-commit-config.yaml') }}

      - name: Set up the environment
        uses: ./.github/actions/setup-python-env

      - name: Run checks
        run: make check

      - name: Run type check
        run: uv run mypy

      - name: Check if documentation can be built
        run: uv run mkdocs build -s

  tests:
    services:
      db:
        image: postgres:17
        env:
          POSTGRES_DB: test_postgres
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: mysecurepassword
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]
      fail-fast: false
    defaults:
      run:
        shell: bash
    steps:
      - name: Check out
        uses: actions/checkout@v4

      - name: Set up the environment
        uses: ./.github/actions/setup-python-env
        with:
          python-version: ${{ matrix.python-version }}

      - name: Run tests
        run: uv run pytest
        env:
          TEST_POSTGRES_DB: test_postgres
          TEST_POSTGRES_USER: postgres
          TEST_POSTGRES_PASSWORD: mysecurepassword
          TEST_POSTGRES_HOST: localhost
          TEST_POSTGRES_PORT: 5432

      - name: Save code coverage report in the artefacts
        uses: actions/upload-artifact@v4
        if: ${{ !env.ACT }}
        with:
          name: coverage-report-${{ matrix.python-version }}
          path: htmlcov
          retention-days: 10

      - name: SonarQube Scan for the lowest supported version
        uses: sonarsource/sonarqube-scan-action@v4
        if: ${{ !env.ACT && matrix.python-version == '3.9' }}
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: SonarQube Quality Gate check for the lowest supported version
        id: sonarqube-quality-gate-check
        uses: sonarsource/sonarqube-quality-gate-action@master
        if: ${{ !env.ACT && matrix.python-version == '3.9' }}
        with:
          pollingTimeoutSec: 600
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
